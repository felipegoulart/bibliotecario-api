// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/infra/database/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @db.Char(26)
  email     String    @unique @db.Char(255)
  password  String
  books     Book[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("users")
}

model Book {
  id          String    @id @db.Char(26)
  title       String    @db.VarChar(255)
  publishedAt DateTime? @map("published_at") @db.Date
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")

  location    Location?  @relation(fields: [locationId], references: [id])
  locationId  String?    @db.Char(26)
  Author      Author?    @relation(fields: [authorId], references: [id])
  authorId    String?    @db.Char(26)
  Publisher   Publisher? @relation(fields: [publisherId], references: [id])
  publisherId String?    @db.Char(26)
  User        User?      @relation(fields: [userId], references: [id])
  userId      String?    @db.Char(26)

  @@map("books")
}

model Author {
  id        String    @id @db.Char(26)
  name      String    @db.VarChar(255)
  books     Book[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model Publisher {
  id        String    @id @db.Char(26)
  name      String    @db.VarChar(63)
  books     Book[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
}

model Location {
  id        String    @id @db.Char(26)
  name      String    @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  Book      Book[]
}
